{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/edit-product/edit-product.component.ts","./src/app/edit-product/edit-product.component.html","./src/app/forms/forms.component.ts","./src/app/forms/forms.component.html","./src/app/nav-bar/nav-bar.component.ts","./src/app/nav-bar/nav-bar.component.html","./src/app/product-add/product-add.component.ts","./src/app/product-add/product-add.component.html","./src/app/product-admin/product-admin.component.ts","./src/app/product-admin/product-admin.component.html","./src/app/product-details/product-details.component.ts","./src/app/product-details/product-details.component.html","./src/app/product.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ProductAddComponent } from './product-add/product-add.component';\nimport { ProductAdminComponent } from './product-admin/product-admin.component';\nimport { ProductDetailsComponent } from './product-details/product-details.component';\nimport { EditProductComponent } from './edit-product/edit-product.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/products', pathMatch: 'full' },\n  {\n    path: 'products',\n    loadChildren: () =>\n      import('./products/products.module').then((m) => m.ProductsModule),\n  },\n  {\n    path: 'product/:id',\n    component: ProductDetailsComponent,\n  },\n  { path: 'product/:id', component: ProductDetailsComponent },\n  { path: 'add-product', component: ProductAddComponent },\n  { path: 'admin-product', component: ProductAdminComponent },\n  {\n    path: 'edit-product/:id',\n    component: EditProductComponent,\n  },\n  // {path:'cart',component:ProductAdminComponent},\n  // {path:'order',component:ProductAdminComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'product-app';\n}\n","<app-nav-bar></app-nav-bar>\n<div class=\"container\">\n    <router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavBarComponent } from './nav-bar/nav-bar.component';\nimport { ProductAdminComponent } from './product-admin/product-admin.component';\nimport { ProductAddComponent } from './product-add/product-add.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsComponent } from './forms/forms.component';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatIconModule } from '@angular/material/icon';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ProductService } from './product.service';\nimport { ProductDetailsComponent } from './product-details/product-details.component';\nimport { EditProductComponent } from './edit-product/edit-product.component';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavBarComponent,\n    ProductAdminComponent,\n    ProductAddComponent,\n    FormsComponent,\n    ProductDetailsComponent,\n    EditProductComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatButtonModule,\n    MatSelectModule,\n    MatRadioModule,\n    MatCardModule,\n    MatIconModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    MatSnackBarModule,\n  ],\n  providers: [ProductService],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ProductService } from '../product.service';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-edit-product',\n  templateUrl: './edit-product.component.html',\n  styleUrls: ['./edit-product.component.css'],\n})\nexport class EditProductComponent implements OnInit {\n  id;\n  product: any;\n  // productForm = this.fb.group({\n  //   title: [null, Validators.required],\n  //   imgUrl: [null, Validators.required],\n  //   price: [null, Validators.required],\n  //   desc: [null, Validators.required],\n  // });\n\n  productForm: FormGroup;\n\n  onSubmit() {\n    //console.log(this.productForm.value);\n    this.productService\n      .editProduct(this.productForm.value)\n      .then((result) => {\n        console.log(result);\n        this._snackBar.open('successFully Changed', '', {\n          duration: 3000,\n          verticalPosition: 'top',\n          panelClass: ['blueSnackbar'],\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n        this._snackBar.open('something went to wrong', '', {\n          duration: 3000,\n          verticalPosition: 'top',\n          panelClass: ['blueSnackbar'],\n        });\n      });\n    this.router.navigate(['/products']);\n  }\n\n  constructor(\n    private route: ActivatedRoute,\n    private productService: ProductService,\n    private fb: FormBuilder,\n    private router: Router,\n    private _snackBar: MatSnackBar\n  ) {}\n\n  ngOnInit(): void {\n    this.route.params.subscribe((params) => {\n      this.id = params.id;\n    });\n\n    this.productService\n      .getProduct(this.id)\n      .then((result: any) => {\n        // console.log(result);\n        this.productForm = this.fb.group({\n          title: [result.title, Validators.required],\n          imgUrl: [result.imgUrl, Validators.required],\n          price: [result.price, Validators.required],\n          desc: [result.desc, Validators.required],\n          id: [result._id, Validators.required],\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n}\n","<div class=\"container mt-4\">\n    <form *ngIf=\"productForm\" [formGroup]=\"productForm\" (ngSubmit)=\"onSubmit()\">\n        <mat-card class=\"shipping-card\">\n            <mat-card-header class=\"text-center\">\n                <mat-card-title>Edit Product</mat-card-title>\n            </mat-card-header>\n            <mat-card-content>\n                <!-- {{product | json}} -->\n                <div class=\"row\">\n                    <div class=\"col\">\n                        <mat-form-field appearance=\"outline\">\n                            <mat-label>Title</mat-label>\n                            <input formControlName=\"title\" matInput placeholder=\"Enter Title\">\n                            <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\n                            <mat-error *ngIf=\"productForm.get('title').errors\">\n                                <div *ngIf=\"productForm.get('title').errors.required\">\n                                    <p>Title is <strong>required</strong></p>\n                                </div>\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col\">\n                        <mat-form-field appearance=\"outline\">\n                            <mat-label>Image Url</mat-label>\n                            <input formControlName=\"imgUrl\" matInput placeholder=\"Placeholder\">\n                            <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\n                            <mat-error *ngIf=\"productForm.get('imgUrl').errors\">\n                                <div *ngIf=\"productForm.get('imgUrl').errors.required\">\n                                    <p>Image Url is <strong>required</strong></p>\n                                </div>\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col\">\n                        <mat-form-field appearance=\"outline\">\n                            <mat-label>price</mat-label>\n                            <input formControlName=\"price\" matInput placeholder=\"Placeholder\">\n                            <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\n                            <mat-error *ngIf=\"productForm.get('price').errors\">\n                                <div *ngIf=\"productForm.get('price').errors.required\">\n                                    <p>price is <strong>required</strong></p>\n                                </div>\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col\">\n                        <mat-form-field appearance=\"outline\">\n                            <mat-label>Description</mat-label>\n                            <input formControlName=\"desc\" matInput placeholder=\"Placeholder\">\n                            <input formControlName=\"id\" type=\"hidden\" t placeholder=\"Placeholder\">\n                            <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\n                            <mat-error *ngIf=\"productForm.get('desc').errors\">\n                                <div *ngIf=\"productForm.get('desc').errors.required\">\n                                    <p>Description is <strong>required</strong></p>\n                                </div>\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col text-center\">\n                        <button [disabled]=\"productForm.invalid\" class=\"btn btn btn-outline-danger\">Save\n                            Changes</button>\n                    </div>\n                </div>\n            </mat-card-content>\n        </mat-card>\n    </form>\n</div>","import { Component } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-forms',\n  templateUrl: './forms.component.html',\n  styleUrls: ['./forms.component.css']\n})\nexport class FormsComponent {\n  addressForm = this.fb.group({\n    company: null,\n    firstName: [null, Validators.required],\n    lastName: [null, Validators.required],\n    address: [null, Validators.required],\n    address2: null,\n    city: [null, Validators.required],\n    state: [null, Validators.required],\n    postalCode: [null, Validators.compose([\n      Validators.required, Validators.minLength(5), Validators.maxLength(5)])\n    ],\n    shipping: ['free', Validators.required]\n  });\n\n  hasUnitNumber = false;\n\n  states = [\n    {name: 'Alabama', abbreviation: 'AL'},\n    {name: 'Alaska', abbreviation: 'AK'},\n    {name: 'American Samoa', abbreviation: 'AS'},\n    {name: 'Arizona', abbreviation: 'AZ'},\n    {name: 'Arkansas', abbreviation: 'AR'},\n    {name: 'California', abbreviation: 'CA'},\n    {name: 'Colorado', abbreviation: 'CO'},\n    {name: 'Connecticut', abbreviation: 'CT'},\n    {name: 'Delaware', abbreviation: 'DE'},\n    {name: 'District Of Columbia', abbreviation: 'DC'},\n    {name: 'Federated States Of Micronesia', abbreviation: 'FM'},\n    {name: 'Florida', abbreviation: 'FL'},\n    {name: 'Georgia', abbreviation: 'GA'},\n    {name: 'Guam', abbreviation: 'GU'},\n    {name: 'Hawaii', abbreviation: 'HI'},\n    {name: 'Idaho', abbreviation: 'ID'},\n    {name: 'Illinois', abbreviation: 'IL'},\n    {name: 'Indiana', abbreviation: 'IN'},\n    {name: 'Iowa', abbreviation: 'IA'},\n    {name: 'Kansas', abbreviation: 'KS'},\n    {name: 'Kentucky', abbreviation: 'KY'},\n    {name: 'Louisiana', abbreviation: 'LA'},\n    {name: 'Maine', abbreviation: 'ME'},\n    {name: 'Marshall Islands', abbreviation: 'MH'},\n    {name: 'Maryland', abbreviation: 'MD'},\n    {name: 'Massachusetts', abbreviation: 'MA'},\n    {name: 'Michigan', abbreviation: 'MI'},\n    {name: 'Minnesota', abbreviation: 'MN'},\n    {name: 'Mississippi', abbreviation: 'MS'},\n    {name: 'Missouri', abbreviation: 'MO'},\n    {name: 'Montana', abbreviation: 'MT'},\n    {name: 'Nebraska', abbreviation: 'NE'},\n    {name: 'Nevada', abbreviation: 'NV'},\n    {name: 'New Hampshire', abbreviation: 'NH'},\n    {name: 'New Jersey', abbreviation: 'NJ'},\n    {name: 'New Mexico', abbreviation: 'NM'},\n    {name: 'New York', abbreviation: 'NY'},\n    {name: 'North Carolina', abbreviation: 'NC'},\n    {name: 'North Dakota', abbreviation: 'ND'},\n    {name: 'Northern Mariana Islands', abbreviation: 'MP'},\n    {name: 'Ohio', abbreviation: 'OH'},\n    {name: 'Oklahoma', abbreviation: 'OK'},\n    {name: 'Oregon', abbreviation: 'OR'},\n    {name: 'Palau', abbreviation: 'PW'},\n    {name: 'Pennsylvania', abbreviation: 'PA'},\n    {name: 'Puerto Rico', abbreviation: 'PR'},\n    {name: 'Rhode Island', abbreviation: 'RI'},\n    {name: 'South Carolina', abbreviation: 'SC'},\n    {name: 'South Dakota', abbreviation: 'SD'},\n    {name: 'Tennessee', abbreviation: 'TN'},\n    {name: 'Texas', abbreviation: 'TX'},\n    {name: 'Utah', abbreviation: 'UT'},\n    {name: 'Vermont', abbreviation: 'VT'},\n    {name: 'Virgin Islands', abbreviation: 'VI'},\n    {name: 'Virginia', abbreviation: 'VA'},\n    {name: 'Washington', abbreviation: 'WA'},\n    {name: 'West Virginia', abbreviation: 'WV'},\n    {name: 'Wisconsin', abbreviation: 'WI'},\n    {name: 'Wyoming', abbreviation: 'WY'}\n  ];\n\n  constructor(private fb: FormBuilder) {}\n\n  onSubmit() {\n    alert('Thanks!');\n  }\n}\n","<form [formGroup]=\"addressForm\" novalidate (ngSubmit)=\"onSubmit()\">\n  <mat-card class=\"shipping-card\">\n    <mat-card-header>\n      <mat-card-title>Shipping Information</mat-card-title>\n    </mat-card-header>\n    <mat-card-content>\n      <div class=\"row\">\n        <div class=\"col\">\n          <mat-form-field class=\"full-width\">\n            <input matInput placeholder=\"Company\" formControlName=\"company\">\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col\">\n          <mat-form-field class=\"full-width\">\n            <input matInput placeholder=\"First name\" formControlName=\"firstName\">\n            <mat-error *ngIf=\"addressForm.controls['firstName'].hasError('required')\">\n              First name is <strong>required</strong>\n            </mat-error>\n          </mat-form-field>\n        </div>\n        <div class=\"col\">\n          <mat-form-field class=\"full-width\">\n            <input matInput placeholder=\"Last name\" formControlName=\"lastName\">\n            <mat-error *ngIf=\"addressForm.controls['lastName'].hasError('required')\">\n              Last name is <strong>required</strong>\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col\">\n          <mat-form-field class=\"full-width\">\n            <textarea matInput placeholder=\"Address\" formControlName=\"address\"></textarea>\n            <mat-error *ngIf=\"addressForm.controls['address'].hasError('required')\">\n              Address is <strong>required</strong>\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\" *ngIf=\"!hasUnitNumber\">\n        <div class=\"col\">\n          <button mat-button type=\"button\" (click)=\"hasUnitNumber = !hasUnitNumber\">\n            + Add C/O, Apt, Suite, Unit\n          </button>\n        </div>\n      </div>\n      <div class=\"row\" *ngIf=\"hasUnitNumber\">\n        <div class=\"col\">\n          <mat-form-field class=\"full-width\">\n            <textarea matInput placeholder=\"Address 2\" formControlName=\"address2\"></textarea>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col\">\n          <mat-form-field class=\"full-width\">\n            <input matInput placeholder=\"City\" formControlName=\"city\">\n            <mat-error *ngIf=\"addressForm.controls['city'].hasError('required')\">\n              City is <strong>required</strong>\n            </mat-error>\n          </mat-form-field>\n        </div>\n        <div class=\"col\">\n          <mat-form-field class=\"full-width\">\n            <mat-select placeholder=\"State\" formControlName=\"state\">\n              <mat-option *ngFor=\"let state of states\" [value]=\"state.abbreviation\">\n                {{ state.name }}\n              </mat-option>\n            </mat-select>\n            <mat-error *ngIf=\"addressForm.controls['state'].hasError('required')\">\n              State is <strong>required</strong>\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col\">\n          <mat-form-field class=\"full-width\">\n            <input matInput #postalCode maxlength=\"5\" placeholder=\"Postal Code\" type=\"number\" formControlName=\"postalCode\">\n            <mat-hint align=\"end\">{{postalCode.value.length}} / 5</mat-hint>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col\">\n          <mat-radio-group formControlName=\"shipping\">\n            <mat-radio-button value=\"free\">Free Shipping</mat-radio-button>\n            <mat-radio-button value=\"priority\">Priority Shipping</mat-radio-button>\n            <mat-radio-button value=\"nextday\">Next Day Shipping</mat-radio-button>\n          </mat-radio-group>\n        </div>\n      </div>\n    </mat-card-content>\n    <mat-card-actions>\n      <button mat-raised-button color=\"primary\" type=\"submit\">Submit</button>\n    </mat-card-actions>\n  </mat-card>\n</form>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.css']\n})\nexport class NavBarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light default-color\">\n    <!-- Navbar brand -->\n    <a class=\"navbar-brand\" href=\"#\">Product Manage App</a>\n\n    <!-- Collapse button -->\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#basicExampleNav\"\n        aria-controls=\"basicExampleNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n    </button>\n\n    <!-- Collapsible content -->\n    <div class=\"collapse navbar-collapse font-weight-bold\" id=\"basicExampleNav\">\n        <!-- Links -->\n        <ul class=\"navbar-nav ml-auto\">\n            <li class=\"nav-item\" routerLinkActive=\"active\">\n                <a class=\"nav-link\" routerLink=\"/products\">Products</a>\n            </li>\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" href=\"\">Cart</a>\n            </li>\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" href=\"\">Orders</a>\n            </li>\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" routerLink=\"/add-product\" routerLinkActive=\"active\">Add Product</a>\n            </li>\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" routerLink=\"/admin-product\" routerLinkActive=\"active\">Admin Product</a>\n            </li>\n        </ul>\n    </div>\n    <!-- Collapsible content -->\n</nav>\n<!-- <div class=\"container\">\n    <router-outlet></router-outlet>\n</div> -->","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { ProductService } from '../product.service';\nimport { Router } from '@angular/router';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-product-add',\n  templateUrl: './product-add.component.html',\n  styleUrls: ['./product-add.component.css'],\n})\nexport class ProductAddComponent implements OnInit {\n  ngOnInit(): void {}\n  durationInSeconds = 5;\n  productForm = this.fb.group({\n    title: [null, Validators.required],\n    imgUrl: [null, Validators.required],\n    price: [null, Validators.required],\n    desc: [null, Validators.required],\n  });\n  constructor(\n    private fb: FormBuilder,\n    private productService: ProductService,\n    private route: Router,\n    private _snackBar: MatSnackBar\n  ) {}\n\n  onSubmit() {\n    console.log(this.productForm.value);\n    this.productService\n      .addProduct(this.productForm.value)\n      .then((result) => {\n        console.log(result);\n        console.log('result');\n        this._snackBar.open('successFully Added', '', {\n          duration: 3000,\n          verticalPosition: 'top',\n          panelClass: ['blueSnackbar'],\n        });\n      })\n      .catch((err) => {\n        console.log('err');\n        console.log(err);\n        this._snackBar.open('something went to wrong', '', {\n          duration: 3000,\n          verticalPosition: 'top',\n          panelClass: ['blueSnackbar'],\n        });\n      });\n    this.route.navigate(['/products']);\n  }\n}\n","<div class=\"container mt-4\">\n    <form [formGroup]=\"productForm\" (ngSubmit)=\"onSubmit()\">\n        <mat-card class=\"shipping-card\">\n            <mat-card-header class=\"text-center\">\n                <mat-card-title>Add Product</mat-card-title>\n            </mat-card-header>\n            <mat-card-content>\n                <div class=\"row\">\n                    <div class=\"col\">\n                        <mat-form-field appearance=\"outline\">\n                            <mat-label>Title</mat-label>\n                            <input formControlName=\"title\" matInput placeholder=\"Enter Title\">\n                            <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\n                            <mat-error *ngIf=\"productForm.get('title').errors\">\n                                <div *ngIf=\"productForm.get('title').errors.required\">\n                                    <p>Title is <strong>required</strong></p>\n                                </div>\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col\">\n                        <mat-form-field appearance=\"outline\">\n                            <mat-label>Image Url</mat-label>\n                            <input formControlName=\"imgUrl\" matInput placeholder=\"Placeholder\">\n                            <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\n                            <mat-error *ngIf=\"productForm.get('imgUrl').errors\">\n                                <div *ngIf=\"productForm.get('imgUrl').errors.required\">\n                                    <p>Image Url is <strong>required</strong></p>\n                                </div>\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col\">\n                        <mat-form-field appearance=\"outline\">\n                            <mat-label>price</mat-label>\n                            <input formControlName=\"price\" matInput placeholder=\"Placeholder\">\n                            <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\n                            <mat-error *ngIf=\"productForm.get('price').errors\">\n                                <div *ngIf=\"productForm.get('price').errors.required\">\n                                    <p>price is <strong>required</strong></p>\n                                </div>\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col\">\n                        <mat-form-field appearance=\"outline\">\n                            <mat-label>Description</mat-label>\n                            <input formControlName=\"desc\" matInput placeholder=\"Placeholder\">\n                            <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\n                            <mat-error *ngIf=\"productForm.get('desc').errors\">\n                                <div *ngIf=\"productForm.get('desc').errors.required\">\n                                    <p>Description is <strong>required</strong></p>\n                                </div>\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col text-center\">\n                        <button [disabled]=\"productForm.invalid\" class=\"btn btn btn-outline-danger\">Submit</button>\n                    </div>\n                </div>\n            </mat-card-content>\n        </mat-card>\n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ProductService } from '../product.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-product-admin',\n  templateUrl: './product-admin.component.html',\n  styleUrls: ['./product-admin.component.css'],\n})\nexport class ProductAdminComponent implements OnInit {\n  products: any;\n  constructor(\n    private productService: ProductService,\n    private _snackBar: MatSnackBar\n  ) {}\n\n  ngOnInit(): void {\n    this.productService\n      .getProducts()\n      .then((result) => {\n        // console.log(result);\n        this.products = result;\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  deleteProduct(id) {\n    console.log(id);\n    this.products = this.products.filter(({ _id }) => id !== _id);\n    this.productService.deleteProduct(id);\n    this._snackBar.open('Product Deleted SuccessFully', '', {\n      duration: 3000,\n      verticalPosition: 'top',\n      panelClass: ['blueSnackbar'],\n    });\n    // this.productService\n    //   .getProducts()\n    //   .then((result) => {\n    //     // console.log(result);\n    //     this.products = result;\n    //   })\n    //   .catch((err) => {\n    //     console.log(err);\n    //   });\n  }\n}\n","<div class=\"container\">\n    <div class=\"row mt-4\" *ngFor=\"let x of products\">\n        <div class=\"col-md-3\"></div>\n        <div class=\"col-md-6\">\n            <div class=\"card\">\n                <img src=\"{{x.imgUrl}}\" class=\"card-img-top\">\n                <div class=\"card-body\">\n                    <h4 class=\"ont-weight-bold card-title\">{{x.title}}</h4>\n                    <!-- Text -->\n                    <div class=\"d-flex\">\n                        <p class=\"text-center  p-1\">\n                            {{x.price}}\n                        </p>\n                        <p class=\"ext-center p-1\">\n                            {{x.desc}}\n                        </p>\n                    </div>\n                    <!-- Button -->\n                    <a routerLink=\"/edit-product/{{x._id}}\" class=\"details btn btn-outline-danger m-3\">Edit</a>\n                    <a (click)=\"deleteProduct(x._id)\" class=\"btn btn-outline-danger m-3\" id=\"\">Delete</a>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-md-3\"></div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ProductService } from '../product.service';\n\n@Component({\n  selector: 'app-product-details',\n  templateUrl: './product-details.component.html',\n  styleUrls: ['./product-details.component.css'],\n})\nexport class ProductDetailsComponent implements OnInit {\n  product;\n  id;\n  constructor(\n    private route: ActivatedRoute,\n    private productService: ProductService\n  ) {}\n\n  ngOnInit(): void {\n    // const id = this.route.snapshot.params['id'];\n    this.route.params.subscribe((params) => {\n      this.id = params.id;\n    });\n    this.productService\n      .getProduct(this.id)\n      .then((result) => {\n        console.log(result);\n        this.product = result;\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n}\n","<div class=\"container\">\n    <div class=\"row mt-4\">\n        <div class=\"col-md-12\">\n            <div class=\"card\" *ngIf=\"product\">\n                <img src=\"{{product.imgUrl}}\" class=\"card-img-top\">\n                <div class=\"card-body\">\n                    <h4 class=\"ont-weight-bold card-title\">{{product.title}}</h4>\n                    <!-- Text -->\n                    <div class=\"d-flex\">\n                        <p class=\"text-center  p-1\">\n                            {{product.price}}\n                        </p>\n                        <p class=\"ext-center p-1\">\n                            {{product.desc}}\n                        </p>\n                    </div>\n                    <!-- Button -->\n                    <a href=\"\" class=\"details btn btn-outline-danger m-3\">Add To Cart</a>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductService {\n  constructor(private http: HttpClient) {}\n\n  getProducts() {\n    return this.http.get('http://localhost:2000/product').toPromise();\n  }\n\n  getProduct(id) {\n    return this.http.get(`http://localhost:2000/product/${id}`).toPromise();\n  }\n\n  addProduct(product) {\n    console.log(product);\n    return this.http.post('http://localhost:2000/product', product).toPromise();\n  }\n\n  editProduct(product) {\n    console.log(product);\n    return this.http\n      .put(`http://localhost:2000/product/${product.id}`, product)\n      .toPromise();\n  }\n\n  deleteProduct(id) {\n    return this.http.delete(`http://localhost:2000/product/${id}`).toPromise();\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}