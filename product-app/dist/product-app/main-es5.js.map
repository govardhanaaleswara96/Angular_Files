{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/edit-product/edit-product.component.ts","webpack:///src/app/edit-product/edit-product.component.html","webpack:///src/app/forms/forms.component.ts","webpack:///src/app/forms/forms.component.html","webpack:///src/app/nav-bar/nav-bar.component.ts","webpack:///src/app/nav-bar/nav-bar.component.html","webpack:///src/app/product-add/product-add.component.ts","webpack:///src/app/product-add/product-add.component.html","webpack:///src/app/product-admin/product-admin.component.ts","webpack:///src/app/product-admin/product-admin.component.html","webpack:///src/app/product-details/product-details.component.ts","webpack:///src/app/product-details/product-details.component.html","webpack:///src/app/product.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","loadChildren","m","ProductsModule","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","EditProductComponent","route","productService","fb","router","_snackBar","editProduct","productForm","value","result","console","log","open","duration","verticalPosition","panelClass","err","navigate","params","subscribe","getProduct","group","required","imgUrl","price","desc","_id","FormsComponent","addressForm","company","firstName","lastName","address","address2","city","state","postalCode","compose","minLength","maxLength","shipping","hasUnitNumber","states","name","abbreviation","alert","onSubmit","NavBarComponent","ProductAddComponent","durationInSeconds","addProduct","ProductAdminComponent","getProducts","products","filter","deleteProduct","ProductDetailsComponent","product","ProductService","http","get","toPromise","post","put","providedIn","environment","production","bootstrapModule","error"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAOA,QAAMC,MAAM,GAAW,CACrB;AAAEC,UAAI,EAAE,EAAR;AAAYC,gBAAU,EAAE,WAAxB;AAAqCC,eAAS,EAAE;AAAhD,KADqB,EAErB;AACEF,UAAI,EAAE,UADR;AAEEG,kBAAY,EAAE;AAAA,eACZ;AAAA;AAAA;AAAA;AAAA,kDAAqCZ,IAArC,CAA0C,UAACa,CAAD;AAAA,iBAAOA,CAAC,CAACC,cAAT;AAAA,SAA1C,CADY;AAAA;AAFhB,KAFqB,EAOrB;AACEL,UAAI,EAAE,aADR;AAEEM,eAAS,EAAE;AAFb,KAPqB,EAWrB;AAAEN,UAAI,EAAE,aAAR;AAAuBM,eAAS,EAAE;AAAlC,KAXqB,EAYrB;AAAEN,UAAI,EAAE,aAAR;AAAuBM,eAAS,EAAE;AAAlC,KAZqB,EAarB;AAAEN,UAAI,EAAE,eAAR;AAAyBM,eAAS,EAAE;AAApC,KAbqB,EAcrB;AACEN,UAAI,EAAE,kBADR;AAEEM,eAAS,EAAE;AAFb,KAdqB,CAAvB;;QA0BaC,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAHlB,CAAC,6DAAaC,OAAb,CAAqBT,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;;0HAAhBQ,gB,EAAgB;AAAA;AAAA,kBAFjB,4DAEiB;AAAA,O;AAFL,K;;;;;sEAEXA,gB,EAAgB;cAJ5B,sDAI4B;eAJnB;AACRE,iBAAO,EAAE,CAAC,6DAAaD,OAAb,CAAqBT,MAArB,CAAD,CADD;AAERF,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAImB,Q;;;;;;;;;;;;;;;;;;ACjC7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaa,Y,GALb;AAAA;;AAME,WAAAC,KAAA,GAAQ,aAAR;AACD,K;;;uBAFYD,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA,gC;AAAA;AAAA;ACPzB;;AACA;;AACI;;AACJ;;;;;;;;;sEDIaA,Y,EAAY;cALxB,uDAKwB;eALd;AACTE,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;AEPzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAkDaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAHT,CAAC,gEAAD,C;AAAgB,gBAdlB,CACP,uEADO,EAEP,oEAFO,EAGP,4FAHO,EAIP,sEAJO,EAKP,yEALO,EAMP,yEANO,EAOP,uEAPO,EAQP,qEARO,EASP,qEATO,EAUP,mEAVO,EAWP,sEAXO,EAYP,8EAZO,CAckB;;;;0HAGhBA,S,EAAS;AAAA,uBAzBlB,2DAyBkB,EAxBlB,0EAwBkB,EAvBlB,4FAuBkB,EAtBlB,sFAsBkB,EArBlB,qEAqBkB,EApBlB,mGAoBkB,EAnBlB,0FAmBkB;AAnBE,kBAGpB,uEAHoB,EAIpB,oEAJoB,EAKpB,4FALoB,EAMpB,sEANoB,EAOpB,yEAPoB,EAQpB,yEARoB,EASpB,uEAToB,EAUpB,qEAVoB,EAWpB,qEAXoB,EAYpB,mEAZoB,EAapB,sEAboB,EAcpB,8EAdoB;AAmBF,O;AALD,K;;;;;sEAKRA,S,EAAS;cA3BrB,sDA2BqB;eA3BZ;AACRC,sBAAY,EAAE,CACZ,2DADY,EAEZ,0EAFY,EAGZ,4FAHY,EAIZ,sFAJY,EAKZ,qEALY,EAMZ,mGANY,EAOZ,0FAPY,CADN;AAURP,iBAAO,EAAE,CACP,uEADO,EAEP,oEAFO,EAGP,4FAHO,EAIP,sEAJO,EAKP,yEALO,EAMP,yEANO,EAOP,uEAPO,EAQP,qEARO,EASP,qEATO,EAUP,mEAVO,EAWP,sEAXO,EAYP,8EAZO,CAVD;AAwBRQ,mBAAS,EAAE,CAAC,gEAAD,CAxBH;AAyBRC,mBAAS,EAAE,CAAC,2DAAD;AAzBH,S;AA2BY,Q;;;;;;;;;;;;;;;;;;AClDtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACegC;;AACI;;AAAG;;AAAS;;AAAQ;;AAAQ;;AAAS;;AACzC;;;;;;AAHJ;;AACI;;AAGJ;;;;;;AAHS;;AAAA;;;;;;AAcL;;AACI;;AAAG;;AAAa;;AAAQ;;AAAQ;;AAAS;;AAC7C;;;;;;AAHJ;;AACI;;AAGJ;;;;;;AAHS;;AAAA;;;;;;AAcL;;AACI;;AAAG;;AAAS;;AAAQ;;AAAQ;;AAAS;;AACzC;;;;;;AAHJ;;AACI;;AAGJ;;;;;;AAHS;;AAAA;;;;;;AAeL;;AACI;;AAAG;;AAAe;;AAAQ;;AAAQ;;AAAS;;AAC/C;;;;;;AAHJ;;AACI;;AAGJ;;;;;;AAHS;;AAAA;;;;;;;;AAzDjC;;AAAoD;AAAA;;AAAA;;AAAA;AAAA;;AAChD;;AACI;;AACI;;AAAgB;;AAAY;;AAChC;;AACA;;AAEI;;AACI;;AACI;;AACI;;AAAW;;AAAK;;AAChB;;AACA;;AAAoB;;AAAwB;;AAC5C;;AAKJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAAW;;AAAS;;AACpB;;AACA;;AAAoB;;AAAwB;;AAC5C;;AAKJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAAW;;AAAK;;AAChB;;AACA;;AAAoB;;AAAwB;;AAC5C;;AAKJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAAW;;AAAW;;AACtB;;AACA;;AACA;;AAAoB;;AAAwB;;AAC5C;;AAKJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAA4E;;AACjE;;AACf;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;AAxE0B;;AAaS;;AAAA;;AAcA;;AAAA;;AAcA;;AAAA;;AAeA;;AAAA;;AAUP;;AAAA;;;;QDxDnBC,oB;AAmCX,oCACUC,KADV,EAEUC,cAFV,EAGUC,EAHV,EAIUC,MAJV,EAKUC,SALV,EAKgC;AAAA;;AAJtB,aAAAJ,KAAA,GAAAA,KAAA;AACA,aAAAC,cAAA,GAAAA,cAAA;AACA,aAAAC,EAAA,GAAAA,EAAA;AACA,aAAAC,MAAA,GAAAA,MAAA;AACA,aAAAC,SAAA,GAAAA,SAAA;AACN;;;;mCA7BO;AAAA;;AACT;AACA,eAAKH,cAAL,CACGI,WADH,CACe,KAAKC,WAAL,CAAiBC,KADhC,EAEGpC,IAFH,CAEQ,UAACqC,MAAD,EAAY;AAChBC,mBAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,iBAAI,CAACJ,SAAL,CAAeO,IAAf,CAAoB,sBAApB,EAA4C,EAA5C,EAAgD;AAC9CC,sBAAQ,EAAE,IADoC;AAE9CC,8BAAgB,EAAE,KAF4B;AAG9CC,wBAAU,EAAE,CAAC,cAAD;AAHkC,aAAhD;AAKD,WATH,WAUS,UAACC,GAAD,EAAS;AACdN,mBAAO,CAACC,GAAR,CAAYK,GAAZ;;AACA,iBAAI,CAACX,SAAL,CAAeO,IAAf,CAAoB,yBAApB,EAA+C,EAA/C,EAAmD;AACjDC,sBAAQ,EAAE,IADuC;AAEjDC,8BAAgB,EAAE,KAF+B;AAGjDC,wBAAU,EAAE,CAAC,cAAD;AAHqC,aAAnD;AAKD,WAjBH;AAkBA,eAAKX,MAAL,CAAYa,QAAZ,CAAqB,CAAC,WAAD,CAArB;AACD;;;mCAUO;AAAA;;AACN,eAAKhB,KAAL,CAAWiB,MAAX,CAAkBC,SAAlB,CAA4B,UAACD,MAAD,EAAY;AACtC,kBAAI,CAACvC,EAAL,GAAUuC,MAAM,CAACvC,EAAjB;AACD,WAFD;AAIA,eAAKuB,cAAL,CACGkB,UADH,CACc,KAAKzC,EADnB,EAEGP,IAFH,CAEQ,UAACqC,MAAD,EAAiB;AACrB;AACA,kBAAI,CAACF,WAAL,GAAmB,MAAI,CAACJ,EAAL,CAAQkB,KAAR,CAAc;AAC/B7B,mBAAK,EAAE,CAACiB,MAAM,CAACjB,KAAR,EAAe,0DAAW8B,QAA1B,CADwB;AAE/BC,oBAAM,EAAE,CAACd,MAAM,CAACc,MAAR,EAAgB,0DAAWD,QAA3B,CAFuB;AAG/BE,mBAAK,EAAE,CAACf,MAAM,CAACe,KAAR,EAAe,0DAAWF,QAA1B,CAHwB;AAI/BG,kBAAI,EAAE,CAAChB,MAAM,CAACgB,IAAR,EAAc,0DAAWH,QAAzB,CAJyB;AAK/B3C,gBAAE,EAAE,CAAC8B,MAAM,CAACiB,GAAR,EAAa,0DAAWJ,QAAxB;AAL2B,aAAd,CAAnB;AAOD,WAXH,WAYS,UAACN,GAAD,EAAS;AACdN,mBAAO,CAACC,GAAR,CAAYK,GAAZ;AACD,WAdH;AAeD;;;;;;;uBA/DUhB,oB,EAAoB,+H,EAAA,gI,EAAA,2H,EAAA,uH,EAAA,wI;AAAA,K;;;YAApBA,oB;AAAoB,uC;AAAA,c;AAAA,a;AAAA,msB;AAAA;AAAA;ACXjC;;AACI;;AAyEJ;;;;AAzEU;;AAAA;;;;;;;;;sEDUGA,oB,EAAoB;cALhC,uDAKgC;eALtB;AACTP,kBAAQ,EAAE,kBADD;AAETC,qBAAW,EAAE,+BAFJ;AAGTC,mBAAS,EAAE,CAAC,8BAAD;AAHF,S;AAKsB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEXjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACiBY;;AACE;;AAAc;;AAAQ;;AAAQ;;AAChC;;;;;;AAMA;;AACE;;AAAa;;AAAQ;;AAAQ;;AAC/B;;;;;;AAQA;;AACE;;AAAW;;AAAQ;;AAAQ;;AAC7B;;;;;;;;AAIN;;AACE;;AACE;;AAAiC;AAAA;;AAAA;;AAAA;AAAA;;AAC/B;;AACF;;AACF;;AACF;;;;;;AACA;;AACE;;AACE;;AACE;;AACF;;AACF;;AACF;;;;;;AAKM;;AACE;;AAAQ;;AAAQ;;AAAQ;;AAC1B;;;;;;AAME;;AACE;;AACF;;;;;;AAFyC;;AACvC;;AAAA;;;;;;AAGJ;;AACE;;AAAS;;AAAQ;;AAAQ;;AAC3B;;;;QDjECgC,c;AA+EX,8BAAoBxB,EAApB,EAAqC;AAAA;;AAAjB,aAAAA,EAAA,GAAAA,EAAA;AA9EpB,aAAAyB,WAAA,GAAc,KAAKzB,EAAL,CAAQkB,KAAR,CAAc;AAC1BQ,iBAAO,EAAE,IADiB;AAE1BC,mBAAS,EAAE,CAAC,IAAD,EAAO,0DAAWR,QAAlB,CAFe;AAG1BS,kBAAQ,EAAE,CAAC,IAAD,EAAO,0DAAWT,QAAlB,CAHgB;AAI1BU,iBAAO,EAAE,CAAC,IAAD,EAAO,0DAAWV,QAAlB,CAJiB;AAK1BW,kBAAQ,EAAE,IALgB;AAM1BC,cAAI,EAAE,CAAC,IAAD,EAAO,0DAAWZ,QAAlB,CANoB;AAO1Ba,eAAK,EAAE,CAAC,IAAD,EAAO,0DAAWb,QAAlB,CAPmB;AAQ1Bc,oBAAU,EAAE,CAAC,IAAD,EAAO,0DAAWC,OAAX,CAAmB,CACpC,0DAAWf,QADyB,EACf,0DAAWgB,SAAX,CAAqB,CAArB,CADe,EACU,0DAAWC,SAAX,CAAqB,CAArB,CADV,CAAnB,CAAP,CARc;AAW1BC,kBAAQ,EAAE,CAAC,MAAD,EAAS,0DAAWlB,QAApB;AAXgB,SAAd,CAAd;AAcA,aAAAmB,aAAA,GAAgB,KAAhB;AAEA,aAAAC,MAAA,GAAS,CACP;AAACC,cAAI,EAAE,SAAP;AAAkBC,sBAAY,EAAE;AAAhC,SADO,EAEP;AAACD,cAAI,EAAE,QAAP;AAAiBC,sBAAY,EAAE;AAA/B,SAFO,EAGP;AAACD,cAAI,EAAE,gBAAP;AAAyBC,sBAAY,EAAE;AAAvC,SAHO,EAIP;AAACD,cAAI,EAAE,SAAP;AAAkBC,sBAAY,EAAE;AAAhC,SAJO,EAKP;AAACD,cAAI,EAAE,UAAP;AAAmBC,sBAAY,EAAE;AAAjC,SALO,EAMP;AAACD,cAAI,EAAE,YAAP;AAAqBC,sBAAY,EAAE;AAAnC,SANO,EAOP;AAACD,cAAI,EAAE,UAAP;AAAmBC,sBAAY,EAAE;AAAjC,SAPO,EAQP;AAACD,cAAI,EAAE,aAAP;AAAsBC,sBAAY,EAAE;AAApC,SARO,EASP;AAACD,cAAI,EAAE,UAAP;AAAmBC,sBAAY,EAAE;AAAjC,SATO,EAUP;AAACD,cAAI,EAAE,sBAAP;AAA+BC,sBAAY,EAAE;AAA7C,SAVO,EAWP;AAACD,cAAI,EAAE,gCAAP;AAAyCC,sBAAY,EAAE;AAAvD,SAXO,EAYP;AAACD,cAAI,EAAE,SAAP;AAAkBC,sBAAY,EAAE;AAAhC,SAZO,EAaP;AAACD,cAAI,EAAE,SAAP;AAAkBC,sBAAY,EAAE;AAAhC,SAbO,EAcP;AAACD,cAAI,EAAE,MAAP;AAAeC,sBAAY,EAAE;AAA7B,SAdO,EAeP;AAACD,cAAI,EAAE,QAAP;AAAiBC,sBAAY,EAAE;AAA/B,SAfO,EAgBP;AAACD,cAAI,EAAE,OAAP;AAAgBC,sBAAY,EAAE;AAA9B,SAhBO,EAiBP;AAACD,cAAI,EAAE,UAAP;AAAmBC,sBAAY,EAAE;AAAjC,SAjBO,EAkBP;AAACD,cAAI,EAAE,SAAP;AAAkBC,sBAAY,EAAE;AAAhC,SAlBO,EAmBP;AAACD,cAAI,EAAE,MAAP;AAAeC,sBAAY,EAAE;AAA7B,SAnBO,EAoBP;AAACD,cAAI,EAAE,QAAP;AAAiBC,sBAAY,EAAE;AAA/B,SApBO,EAqBP;AAACD,cAAI,EAAE,UAAP;AAAmBC,sBAAY,EAAE;AAAjC,SArBO,EAsBP;AAACD,cAAI,EAAE,WAAP;AAAoBC,sBAAY,EAAE;AAAlC,SAtBO,EAuBP;AAACD,cAAI,EAAE,OAAP;AAAgBC,sBAAY,EAAE;AAA9B,SAvBO,EAwBP;AAACD,cAAI,EAAE,kBAAP;AAA2BC,sBAAY,EAAE;AAAzC,SAxBO,EAyBP;AAACD,cAAI,EAAE,UAAP;AAAmBC,sBAAY,EAAE;AAAjC,SAzBO,EA0BP;AAACD,cAAI,EAAE,eAAP;AAAwBC,sBAAY,EAAE;AAAtC,SA1BO,EA2BP;AAACD,cAAI,EAAE,UAAP;AAAmBC,sBAAY,EAAE;AAAjC,SA3BO,EA4BP;AAACD,cAAI,EAAE,WAAP;AAAoBC,sBAAY,EAAE;AAAlC,SA5BO,EA6BP;AAACD,cAAI,EAAE,aAAP;AAAsBC,sBAAY,EAAE;AAApC,SA7BO,EA8BP;AAACD,cAAI,EAAE,UAAP;AAAmBC,sBAAY,EAAE;AAAjC,SA9BO,EA+BP;AAACD,cAAI,EAAE,SAAP;AAAkBC,sBAAY,EAAE;AAAhC,SA/BO,EAgCP;AAACD,cAAI,EAAE,UAAP;AAAmBC,sBAAY,EAAE;AAAjC,SAhCO,EAiCP;AAACD,cAAI,EAAE,QAAP;AAAiBC,sBAAY,EAAE;AAA/B,SAjCO,EAkCP;AAACD,cAAI,EAAE,eAAP;AAAwBC,sBAAY,EAAE;AAAtC,SAlCO,EAmCP;AAACD,cAAI,EAAE,YAAP;AAAqBC,sBAAY,EAAE;AAAnC,SAnCO,EAoCP;AAACD,cAAI,EAAE,YAAP;AAAqBC,sBAAY,EAAE;AAAnC,SApCO,EAqCP;AAACD,cAAI,EAAE,UAAP;AAAmBC,sBAAY,EAAE;AAAjC,SArCO,EAsCP;AAACD,cAAI,EAAE,gBAAP;AAAyBC,sBAAY,EAAE;AAAvC,SAtCO,EAuCP;AAACD,cAAI,EAAE,cAAP;AAAuBC,sBAAY,EAAE;AAArC,SAvCO,EAwCP;AAACD,cAAI,EAAE,0BAAP;AAAmCC,sBAAY,EAAE;AAAjD,SAxCO,EAyCP;AAACD,cAAI,EAAE,MAAP;AAAeC,sBAAY,EAAE;AAA7B,SAzCO,EA0CP;AAACD,cAAI,EAAE,UAAP;AAAmBC,sBAAY,EAAE;AAAjC,SA1CO,EA2CP;AAACD,cAAI,EAAE,QAAP;AAAiBC,sBAAY,EAAE;AAA/B,SA3CO,EA4CP;AAACD,cAAI,EAAE,OAAP;AAAgBC,sBAAY,EAAE;AAA9B,SA5CO,EA6CP;AAACD,cAAI,EAAE,cAAP;AAAuBC,sBAAY,EAAE;AAArC,SA7CO,EA8CP;AAACD,cAAI,EAAE,aAAP;AAAsBC,sBAAY,EAAE;AAApC,SA9CO,EA+CP;AAACD,cAAI,EAAE,cAAP;AAAuBC,sBAAY,EAAE;AAArC,SA/CO,EAgDP;AAACD,cAAI,EAAE,gBAAP;AAAyBC,sBAAY,EAAE;AAAvC,SAhDO,EAiDP;AAACD,cAAI,EAAE,cAAP;AAAuBC,sBAAY,EAAE;AAArC,SAjDO,EAkDP;AAACD,cAAI,EAAE,WAAP;AAAoBC,sBAAY,EAAE;AAAlC,SAlDO,EAmDP;AAACD,cAAI,EAAE,OAAP;AAAgBC,sBAAY,EAAE;AAA9B,SAnDO,EAoDP;AAACD,cAAI,EAAE,MAAP;AAAeC,sBAAY,EAAE;AAA7B,SApDO,EAqDP;AAACD,cAAI,EAAE,SAAP;AAAkBC,sBAAY,EAAE;AAAhC,SArDO,EAsDP;AAACD,cAAI,EAAE,gBAAP;AAAyBC,sBAAY,EAAE;AAAvC,SAtDO,EAuDP;AAACD,cAAI,EAAE,UAAP;AAAmBC,sBAAY,EAAE;AAAjC,SAvDO,EAwDP;AAACD,cAAI,EAAE,YAAP;AAAqBC,sBAAY,EAAE;AAAnC,SAxDO,EAyDP;AAACD,cAAI,EAAE,eAAP;AAAwBC,sBAAY,EAAE;AAAtC,SAzDO,EA0DP;AAACD,cAAI,EAAE,WAAP;AAAoBC,sBAAY,EAAE;AAAlC,SA1DO,EA2DP;AAACD,cAAI,EAAE,SAAP;AAAkBC,sBAAY,EAAE;AAAhC,SA3DO,CAAT;AA8DuC;;;;mCAE5B;AACTC,eAAK,CAAC,SAAD,CAAL;AACD;;;;;;;uBAnFUlB,c,EAAc,2H;AAAA,K;;;YAAdA,c;AAAc,gC;AAAA,e;AAAA,c;AAAA,kkC;AAAA;AAAA;ACR3B;;AAA2C;AAAA,mBAAY,IAAAmB,QAAA,EAAZ;AAAsB,WAAtB;;AACzC;;AACE;;AACE;;AAAgB;;AAAoB;;AACtC;;AACA;;AACE;;AACE;;AACE;;AACE;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACA;;AAGF;;AACF;;AACA;;AACE;;AACE;;AACA;;AAGF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACA;;AAGF;;AACF;;AACF;;AACA;;AAOA;;AAOA;;AACE;;AACE;;AACE;;AACA;;AAGF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAGF;;AACA;;AAGF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACA;;AAAsB;;AAA+B;;AACvD;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAA+B;;AAAa;;AAC5C;;AAAmC;;AAAiB;;AACpD;;AAAkC;;AAAiB;;AACrD;;AACF;;AACF;;AACF;;AACA;;AACE;;AAAwD;;AAAM;;AAChE;;AACF;;AACF;;;;;;AAnGM;;AAiBiB;;AAAA;;AAQA;;AAAA;;AAUA;;AAAA;;AAMA;;AAAA;;AAOA;;AAAA;;AAWA;;AAAA;;AAQG;;AAAA;;AAIH;;AAAA;;AAUW;;AAAA;;;;;;;;;sEDzErBnB,c,EAAc;cAL1B,uDAK0B;eALhB;AACTlC,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,uBAAD;AAHF,S;AAKgB,Q;;;;;;;;;;;;;;;;;;;;;;AER3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaoD,e;AAEX,iCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,e;AAAe,K;;;YAAfA,e;AAAe,kC;AAAA,e;AAAA,a;AAAA,4uB;AAAA;AAAA;ACP5B;;AAEI;;AAAiC;;AAAkB;;AAGnD;;AAEI;;AACJ;;AAGA;;AAEI;;AACI;;AACI;;AAA2C;;AAAQ;;AACvD;;AACA;;AACI;;AAA4B;;AAAI;;AACpC;;AACA;;AACI;;AAA4B;;AAAM;;AACtC;;AACA;;AACI;;AAAwE;;AAAW;;AACvF;;AACA;;AACI;;AAA0E;;AAAa;;AAC3F;;AACJ;;AACJ;;AAEJ;;;;;;;;;sEDzBaA,e,EAAe;cAL3B,uDAK2B;eALjB;AACTtD,kBAAQ,EAAE,aADD;AAETC,qBAAW,EAAE,0BAFJ;AAGTC,mBAAS,EAAE,CAAC,yBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;AEP5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACcgC;;AACI;;AAAG;;AAAS;;AAAQ;;AAAQ;;AAAS;;AACzC;;;;;;AAHJ;;AACI;;AAGJ;;;;;;AAHS;;AAAA;;;;;;AAcL;;AACI;;AAAG;;AAAa;;AAAQ;;AAAQ;;AAAS;;AAC7C;;;;;;AAHJ;;AACI;;AAGJ;;;;;;AAHS;;AAAA;;;;;;AAcL;;AACI;;AAAG;;AAAS;;AAAQ;;AAAQ;;AAAS;;AACzC;;;;;;AAHJ;;AACI;;AAGJ;;;;;;AAHS;;AAAA;;;;;;AAcL;;AACI;;AAAG;;AAAe;;AAAQ;;AAAQ;;AAAS;;AAC/C;;;;;;AAHJ;;AACI;;AAGJ;;;;;;AAHS;;AAAA;;;;QD7CxBqD,mB;AASX,mCACU7C,EADV,EAEUD,cAFV,EAGUD,KAHV,EAIUI,SAJV,EAIgC;AAAA;;AAHtB,aAAAF,EAAA,GAAAA,EAAA;AACA,aAAAD,cAAA,GAAAA,cAAA;AACA,aAAAD,KAAA,GAAAA,KAAA;AACA,aAAAI,SAAA,GAAAA,SAAA;AAXV,aAAA4C,iBAAA,GAAoB,CAApB;AACA,aAAA1C,WAAA,GAAc,KAAKJ,EAAL,CAAQkB,KAAR,CAAc;AAC1B7B,eAAK,EAAE,CAAC,IAAD,EAAO,0DAAW8B,QAAlB,CADmB;AAE1BC,gBAAM,EAAE,CAAC,IAAD,EAAO,0DAAWD,QAAlB,CAFkB;AAG1BE,eAAK,EAAE,CAAC,IAAD,EAAO,0DAAWF,QAAlB,CAHmB;AAI1BG,cAAI,EAAE,CAAC,IAAD,EAAO,0DAAWH,QAAlB;AAJoB,SAAd,CAAd;AAWI;;;;mCAbI,CAAW;;;mCAeR;AAAA;;AACTZ,iBAAO,CAACC,GAAR,CAAY,KAAKJ,WAAL,CAAiBC,KAA7B;AACA,eAAKN,cAAL,CACGgD,UADH,CACc,KAAK3C,WAAL,CAAiBC,KAD/B,EAEGpC,IAFH,CAEQ,UAACqC,MAAD,EAAY;AAChBC,mBAAO,CAACC,GAAR,CAAYF,MAAZ;AACAC,mBAAO,CAACC,GAAR,CAAY,QAAZ;;AACA,kBAAI,CAACN,SAAL,CAAeO,IAAf,CAAoB,oBAApB,EAA0C,EAA1C,EAA8C;AAC5CC,sBAAQ,EAAE,IADkC;AAE5CC,8BAAgB,EAAE,KAF0B;AAG5CC,wBAAU,EAAE,CAAC,cAAD;AAHgC,aAA9C;AAKD,WAVH,WAWS,UAACC,GAAD,EAAS;AACdN,mBAAO,CAACC,GAAR,CAAY,KAAZ;AACAD,mBAAO,CAACC,GAAR,CAAYK,GAAZ;;AACA,kBAAI,CAACX,SAAL,CAAeO,IAAf,CAAoB,yBAApB,EAA+C,EAA/C,EAAmD;AACjDC,sBAAQ,EAAE,IADuC;AAEjDC,8BAAgB,EAAE,KAF+B;AAGjDC,wBAAU,EAAE,CAAC,cAAD;AAHqC,aAAnD;AAKD,WAnBH;AAoBA,eAAKd,KAAL,CAAWgB,QAAX,CAAoB,CAAC,WAAD,CAApB;AACD;;;;;;;uBAvCU+B,mB,EAAmB,2H,EAAA,gI,EAAA,uH,EAAA,wI;AAAA,K;;;YAAnBA,mB;AAAmB,sC;AAAA,e;AAAA,a;AAAA,skB;AAAA;AAAA;ACXhC;;AACI;;AAAgC;AAAA,mBAAY,IAAAF,QAAA,EAAZ;AAAsB,WAAtB;;AAC5B;;AACI;;AACI;;AAAgB;;AAAW;;AAC/B;;AACA;;AACI;;AACI;;AACI;;AACI;;AAAW;;AAAK;;AAChB;;AACA;;AAAoB;;AAAwB;;AAC5C;;AAKJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAAW;;AAAS;;AACpB;;AACA;;AAAoB;;AAAwB;;AAC5C;;AAKJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAAW;;AAAK;;AAChB;;AACA;;AAAoB;;AAAwB;;AAC5C;;AAKJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAAW;;AAAW;;AACtB;;AACA;;AAAoB;;AAAwB;;AAC5C;;AAKJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AAA4E;;AAAM;;AACtF;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;AAtEU;;AAAA;;AAY6B;;AAAA;;AAcA;;AAAA;;AAcA;;AAAA;;AAcA;;AAAA;;AAUP;;AAAA;;;;;;;;;sEDtDnBE,mB,EAAmB;cAL/B,uDAK+B;eALrB;AACTvD,kBAAQ,EAAE,iBADD;AAETC,qBAAW,EAAE,8BAFJ;AAGTC,mBAAS,EAAE,CAAC,6BAAD;AAHF,S;AAKqB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEXhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACCI;;AACI;;AACA;;AACI;;AACI;;AACA;;AACI;;AAAuC;;AAAW;;AAElD;;AACI;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACJ;;AAEA;;AAAmF;;AAAI;;AACvF;;AAAG;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAwE;;AAAM;;AACrF;;AACJ;;AACJ;;AACA;;AACJ;;;;;;AAnBiB;;AAAA;;AAEsC;;AAAA;;AAI/B;;AAAA;;AAGA;;AAAA;;AAIL;;AAAA;;;;QDTVwD,qB;AAEX,qCACUjD,cADV,EAEUG,SAFV,EAEgC;AAAA;;AADtB,aAAAH,cAAA,GAAAA,cAAA;AACA,aAAAG,SAAA,GAAAA,SAAA;AACN;;;;mCAEI;AAAA;;AACN,eAAKH,cAAL,CACGkD,WADH,GAEGhF,IAFH,CAEQ,UAACqC,MAAD,EAAY;AAChB;AACA,kBAAI,CAAC4C,QAAL,GAAgB5C,MAAhB;AACD,WALH,WAMS,UAACO,GAAD,EAAS;AACdN,mBAAO,CAACC,GAAR,CAAYK,GAAZ;AACD,WARH;AASD;;;sCAEarC,E,EAAI;AAChB+B,iBAAO,CAACC,GAAR,CAAYhC,EAAZ;AACA,eAAK0E,QAAL,GAAgB,KAAKA,QAAL,CAAcC,MAAd,CAAqB;AAAA,gBAAG5B,GAAH,QAAGA,GAAH;AAAA,mBAAa/C,EAAE,KAAK+C,GAApB;AAAA,WAArB,CAAhB;AACA,eAAKxB,cAAL,CAAoBqD,aAApB,CAAkC5E,EAAlC;;AACA,eAAK0B,SAAL,CAAeO,IAAf,CAAoB,8BAApB,EAAoD,EAApD,EAAwD;AACtDC,oBAAQ,EAAE,IAD4C;AAEtDC,4BAAgB,EAAE,KAFoC;AAGtDC,sBAAU,EAAE,CAAC,cAAD;AAH0C,WAAxD,EAJgB,CAShB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACD;;;;;;;uBArCUoC,qB,EAAqB,gI,EAAA,wI;AAAA,K;;;YAArBA,qB;AAAqB,wC;AAAA,c;AAAA,a;AAAA,gb;AAAA;AAAA;ACTlC;;AACI;;AAwBJ;;;;AAxB0B;;AAAA;;;;;;;;;sEDQbA,qB,EAAqB;cALjC,uDAKiC;eALvB;AACT1D,kBAAQ,EAAE,mBADD;AAETC,qBAAW,EAAE,gCAFJ;AAGTC,mBAAS,EAAE,CAAC,+BAAD;AAHF,S;AAKuB,Q;;;;;;;;;;;;;;;;;;;;;;;;AETlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACGY;;AACI;;AACA;;AACI;;AAAuC;;AAAiB;;AAExD;;AACI;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACJ;;AAEA;;AAAsD;;AAAW;;AACrE;;AACJ;;;;;;AAfS;;AAAA;;AAEsC;;AAAA;;AAI/B;;AAAA;;AAGA;;AAAA;;;;QDJf6D,uB;AAGX,uCACUvD,KADV,EAEUC,cAFV,EAEwC;AAAA;;AAD9B,aAAAD,KAAA,GAAAA,KAAA;AACA,aAAAC,cAAA,GAAAA,cAAA;AACN;;;;mCAEI;AAAA;;AACN;AACA,eAAKD,KAAL,CAAWiB,MAAX,CAAkBC,SAAlB,CAA4B,UAACD,MAAD,EAAY;AACtC,kBAAI,CAACvC,EAAL,GAAUuC,MAAM,CAACvC,EAAjB;AACD,WAFD;AAGA,eAAKuB,cAAL,CACGkB,UADH,CACc,KAAKzC,EADnB,EAEGP,IAFH,CAEQ,UAACqC,MAAD,EAAY;AAChBC,mBAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,kBAAI,CAACgD,OAAL,GAAehD,MAAf;AACD,WALH,WAMS,UAACO,GAAD,EAAS;AACdN,mBAAO,CAACC,GAAR,CAAYK,GAAZ;AACD,WARH;AASD;;;;;;;uBAtBUwC,uB,EAAuB,+H,EAAA,gI;AAAA,K;;;YAAvBA,uB;AAAuB,0C;AAAA,c;AAAA,a;AAAA,4U;AAAA;AAAA;ACTpC;;AACI;;AACI;;AACI;;AAiBJ;;AACJ;;AACJ;;;;AAnB8B;;AAAA;;;;;;;;;sEDMjBA,uB,EAAuB;cALnC,uDAKmC;eALzB;AACT/D,kBAAQ,EAAE,qBADD;AAETC,qBAAW,EAAE,kCAFJ;AAGTC,mBAAS,EAAE,CAAC,iCAAD;AAHF,S;AAKyB,Q;;;;;;;;;;;;;;;;;;;;;;;;AETpC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAMa+D,c;AACX,8BAAoBC,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAAoB;;;;sCAE1B;AACZ,iBAAO,KAAKA,IAAL,CAAUC,GAAV,CAAc,+BAAd,EAA+CC,SAA/C,EAAP;AACD;;;mCAEUlF,E,EAAI;AACb,iBAAO,KAAKgF,IAAL,CAAUC,GAAV,yCAA+CjF,EAA/C,GAAqDkF,SAArD,EAAP;AACD;;;mCAEUJ,O,EAAS;AAClB/C,iBAAO,CAACC,GAAR,CAAY8C,OAAZ;AACA,iBAAO,KAAKE,IAAL,CAAUG,IAAV,CAAe,+BAAf,EAAgDL,OAAhD,EAAyDI,SAAzD,EAAP;AACD;;;oCAEWJ,O,EAAS;AACnB/C,iBAAO,CAACC,GAAR,CAAY8C,OAAZ;AACA,iBAAO,KAAKE,IAAL,CACJI,GADI,yCACiCN,OAAO,CAAC9E,EADzC,GAC+C8E,OAD/C,EAEJI,SAFI,EAAP;AAGD;;;sCAEalF,E,EAAI;AAChB,iBAAO,KAAKgF,IAAL,mDAAkDhF,EAAlD,GAAwDkF,SAAxD,EAAP;AACD;;;;;;;uBAzBUH,c,EAAc,uH;AAAA,K;;;aAAdA,c;AAAc,eAAdA,cAAc,K;AAAA,kBAFb;;;;;sEAEDA,c,EAAc;cAH1B,wDAG0B;eAHf;AACVM,oBAAU,EAAE;AADF,S;AAGe,Q;;;;;;;;;;;;;;;;;;;;;;ACN3B;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMC,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAnD,GAAG;AAAA,aAAIN,OAAO,CAAC0D,KAAR,CAAcpD,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ProductAddComponent } from './product-add/product-add.component';\nimport { ProductAdminComponent } from './product-admin/product-admin.component';\nimport { ProductDetailsComponent } from './product-details/product-details.component';\nimport { EditProductComponent } from './edit-product/edit-product.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/products', pathMatch: 'full' },\n  {\n    path: 'products',\n    loadChildren: () =>\n      import('./products/products.module').then((m) => m.ProductsModule),\n  },\n  {\n    path: 'product/:id',\n    component: ProductDetailsComponent,\n  },\n  { path: 'product/:id', component: ProductDetailsComponent },\n  { path: 'add-product', component: ProductAddComponent },\n  { path: 'admin-product', component: ProductAdminComponent },\n  {\n    path: 'edit-product/:id',\n    component: EditProductComponent,\n  },\n  // {path:'cart',component:ProductAdminComponent},\n  // {path:'order',component:ProductAdminComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'product-app';\n}\n","<app-nav-bar></app-nav-bar>\n<div class=\"container\">\n    <router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavBarComponent } from './nav-bar/nav-bar.component';\nimport { ProductAdminComponent } from './product-admin/product-admin.component';\nimport { ProductAddComponent } from './product-add/product-add.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsComponent } from './forms/forms.component';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatIconModule } from '@angular/material/icon';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ProductService } from './product.service';\nimport { ProductDetailsComponent } from './product-details/product-details.component';\nimport { EditProductComponent } from './edit-product/edit-product.component';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavBarComponent,\n    ProductAdminComponent,\n    ProductAddComponent,\n    FormsComponent,\n    ProductDetailsComponent,\n    EditProductComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatButtonModule,\n    MatSelectModule,\n    MatRadioModule,\n    MatCardModule,\n    MatIconModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    MatSnackBarModule,\n  ],\n  providers: [ProductService],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ProductService } from '../product.service';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-edit-product',\n  templateUrl: './edit-product.component.html',\n  styleUrls: ['./edit-product.component.css'],\n})\nexport class EditProductComponent implements OnInit {\n  id;\n  product: any;\n  // productForm = this.fb.group({\n  //   title: [null, Validators.required],\n  //   imgUrl: [null, Validators.required],\n  //   price: [null, Validators.required],\n  //   desc: [null, Validators.required],\n  // });\n\n  productForm: FormGroup;\n\n  onSubmit() {\n    //console.log(this.productForm.value);\n    this.productService\n      .editProduct(this.productForm.value)\n      .then((result) => {\n        console.log(result);\n        this._snackBar.open('successFully Changed', '', {\n          duration: 3000,\n          verticalPosition: 'top',\n          panelClass: ['blueSnackbar'],\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n        this._snackBar.open('something went to wrong', '', {\n          duration: 3000,\n          verticalPosition: 'top',\n          panelClass: ['blueSnackbar'],\n        });\n      });\n    this.router.navigate(['/products']);\n  }\n\n  constructor(\n    private route: ActivatedRoute,\n    private productService: ProductService,\n    private fb: FormBuilder,\n    private router: Router,\n    private _snackBar: MatSnackBar\n  ) {}\n\n  ngOnInit(): void {\n    this.route.params.subscribe((params) => {\n      this.id = params.id;\n    });\n\n    this.productService\n      .getProduct(this.id)\n      .then((result: any) => {\n        // console.log(result);\n        this.productForm = this.fb.group({\n          title: [result.title, Validators.required],\n          imgUrl: [result.imgUrl, Validators.required],\n          price: [result.price, Validators.required],\n          desc: [result.desc, Validators.required],\n          id: [result._id, Validators.required],\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n}\n","<div class=\"container mt-4\">\n    <form *ngIf=\"productForm\" [formGroup]=\"productForm\" (ngSubmit)=\"onSubmit()\">\n        <mat-card class=\"shipping-card\">\n            <mat-card-header class=\"text-center\">\n                <mat-card-title>Edit Product</mat-card-title>\n            </mat-card-header>\n            <mat-card-content>\n                <!-- {{product | json}} -->\n                <div class=\"row\">\n                    <div class=\"col\">\n                        <mat-form-field appearance=\"outline\">\n                            <mat-label>Title</mat-label>\n                            <input formControlName=\"title\" matInput placeholder=\"Enter Title\">\n                            <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\n                            <mat-error *ngIf=\"productForm.get('title').errors\">\n                                <div *ngIf=\"productForm.get('title').errors.required\">\n                                    <p>Title is <strong>required</strong></p>\n                                </div>\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col\">\n                        <mat-form-field appearance=\"outline\">\n                            <mat-label>Image Url</mat-label>\n                            <input formControlName=\"imgUrl\" matInput placeholder=\"Placeholder\">\n                            <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\n                            <mat-error *ngIf=\"productForm.get('imgUrl').errors\">\n                                <div *ngIf=\"productForm.get('imgUrl').errors.required\">\n                                    <p>Image Url is <strong>required</strong></p>\n                                </div>\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col\">\n                        <mat-form-field appearance=\"outline\">\n                            <mat-label>price</mat-label>\n                            <input formControlName=\"price\" matInput placeholder=\"Placeholder\">\n                            <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\n                            <mat-error *ngIf=\"productForm.get('price').errors\">\n                                <div *ngIf=\"productForm.get('price').errors.required\">\n                                    <p>price is <strong>required</strong></p>\n                                </div>\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col\">\n                        <mat-form-field appearance=\"outline\">\n                            <mat-label>Description</mat-label>\n                            <input formControlName=\"desc\" matInput placeholder=\"Placeholder\">\n                            <input formControlName=\"id\" type=\"hidden\" t placeholder=\"Placeholder\">\n                            <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\n                            <mat-error *ngIf=\"productForm.get('desc').errors\">\n                                <div *ngIf=\"productForm.get('desc').errors.required\">\n                                    <p>Description is <strong>required</strong></p>\n                                </div>\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col text-center\">\n                        <button [disabled]=\"productForm.invalid\" class=\"btn btn btn-outline-danger\">Save\n                            Changes</button>\n                    </div>\n                </div>\n            </mat-card-content>\n        </mat-card>\n    </form>\n</div>","import { Component } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-forms',\n  templateUrl: './forms.component.html',\n  styleUrls: ['./forms.component.css']\n})\nexport class FormsComponent {\n  addressForm = this.fb.group({\n    company: null,\n    firstName: [null, Validators.required],\n    lastName: [null, Validators.required],\n    address: [null, Validators.required],\n    address2: null,\n    city: [null, Validators.required],\n    state: [null, Validators.required],\n    postalCode: [null, Validators.compose([\n      Validators.required, Validators.minLength(5), Validators.maxLength(5)])\n    ],\n    shipping: ['free', Validators.required]\n  });\n\n  hasUnitNumber = false;\n\n  states = [\n    {name: 'Alabama', abbreviation: 'AL'},\n    {name: 'Alaska', abbreviation: 'AK'},\n    {name: 'American Samoa', abbreviation: 'AS'},\n    {name: 'Arizona', abbreviation: 'AZ'},\n    {name: 'Arkansas', abbreviation: 'AR'},\n    {name: 'California', abbreviation: 'CA'},\n    {name: 'Colorado', abbreviation: 'CO'},\n    {name: 'Connecticut', abbreviation: 'CT'},\n    {name: 'Delaware', abbreviation: 'DE'},\n    {name: 'District Of Columbia', abbreviation: 'DC'},\n    {name: 'Federated States Of Micronesia', abbreviation: 'FM'},\n    {name: 'Florida', abbreviation: 'FL'},\n    {name: 'Georgia', abbreviation: 'GA'},\n    {name: 'Guam', abbreviation: 'GU'},\n    {name: 'Hawaii', abbreviation: 'HI'},\n    {name: 'Idaho', abbreviation: 'ID'},\n    {name: 'Illinois', abbreviation: 'IL'},\n    {name: 'Indiana', abbreviation: 'IN'},\n    {name: 'Iowa', abbreviation: 'IA'},\n    {name: 'Kansas', abbreviation: 'KS'},\n    {name: 'Kentucky', abbreviation: 'KY'},\n    {name: 'Louisiana', abbreviation: 'LA'},\n    {name: 'Maine', abbreviation: 'ME'},\n    {name: 'Marshall Islands', abbreviation: 'MH'},\n    {name: 'Maryland', abbreviation: 'MD'},\n    {name: 'Massachusetts', abbreviation: 'MA'},\n    {name: 'Michigan', abbreviation: 'MI'},\n    {name: 'Minnesota', abbreviation: 'MN'},\n    {name: 'Mississippi', abbreviation: 'MS'},\n    {name: 'Missouri', abbreviation: 'MO'},\n    {name: 'Montana', abbreviation: 'MT'},\n    {name: 'Nebraska', abbreviation: 'NE'},\n    {name: 'Nevada', abbreviation: 'NV'},\n    {name: 'New Hampshire', abbreviation: 'NH'},\n    {name: 'New Jersey', abbreviation: 'NJ'},\n    {name: 'New Mexico', abbreviation: 'NM'},\n    {name: 'New York', abbreviation: 'NY'},\n    {name: 'North Carolina', abbreviation: 'NC'},\n    {name: 'North Dakota', abbreviation: 'ND'},\n    {name: 'Northern Mariana Islands', abbreviation: 'MP'},\n    {name: 'Ohio', abbreviation: 'OH'},\n    {name: 'Oklahoma', abbreviation: 'OK'},\n    {name: 'Oregon', abbreviation: 'OR'},\n    {name: 'Palau', abbreviation: 'PW'},\n    {name: 'Pennsylvania', abbreviation: 'PA'},\n    {name: 'Puerto Rico', abbreviation: 'PR'},\n    {name: 'Rhode Island', abbreviation: 'RI'},\n    {name: 'South Carolina', abbreviation: 'SC'},\n    {name: 'South Dakota', abbreviation: 'SD'},\n    {name: 'Tennessee', abbreviation: 'TN'},\n    {name: 'Texas', abbreviation: 'TX'},\n    {name: 'Utah', abbreviation: 'UT'},\n    {name: 'Vermont', abbreviation: 'VT'},\n    {name: 'Virgin Islands', abbreviation: 'VI'},\n    {name: 'Virginia', abbreviation: 'VA'},\n    {name: 'Washington', abbreviation: 'WA'},\n    {name: 'West Virginia', abbreviation: 'WV'},\n    {name: 'Wisconsin', abbreviation: 'WI'},\n    {name: 'Wyoming', abbreviation: 'WY'}\n  ];\n\n  constructor(private fb: FormBuilder) {}\n\n  onSubmit() {\n    alert('Thanks!');\n  }\n}\n","<form [formGroup]=\"addressForm\" novalidate (ngSubmit)=\"onSubmit()\">\n  <mat-card class=\"shipping-card\">\n    <mat-card-header>\n      <mat-card-title>Shipping Information</mat-card-title>\n    </mat-card-header>\n    <mat-card-content>\n      <div class=\"row\">\n        <div class=\"col\">\n          <mat-form-field class=\"full-width\">\n            <input matInput placeholder=\"Company\" formControlName=\"company\">\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col\">\n          <mat-form-field class=\"full-width\">\n            <input matInput placeholder=\"First name\" formControlName=\"firstName\">\n            <mat-error *ngIf=\"addressForm.controls['firstName'].hasError('required')\">\n              First name is <strong>required</strong>\n            </mat-error>\n          </mat-form-field>\n        </div>\n        <div class=\"col\">\n          <mat-form-field class=\"full-width\">\n            <input matInput placeholder=\"Last name\" formControlName=\"lastName\">\n            <mat-error *ngIf=\"addressForm.controls['lastName'].hasError('required')\">\n              Last name is <strong>required</strong>\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col\">\n          <mat-form-field class=\"full-width\">\n            <textarea matInput placeholder=\"Address\" formControlName=\"address\"></textarea>\n            <mat-error *ngIf=\"addressForm.controls['address'].hasError('required')\">\n              Address is <strong>required</strong>\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\" *ngIf=\"!hasUnitNumber\">\n        <div class=\"col\">\n          <button mat-button type=\"button\" (click)=\"hasUnitNumber = !hasUnitNumber\">\n            + Add C/O, Apt, Suite, Unit\n          </button>\n        </div>\n      </div>\n      <div class=\"row\" *ngIf=\"hasUnitNumber\">\n        <div class=\"col\">\n          <mat-form-field class=\"full-width\">\n            <textarea matInput placeholder=\"Address 2\" formControlName=\"address2\"></textarea>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col\">\n          <mat-form-field class=\"full-width\">\n            <input matInput placeholder=\"City\" formControlName=\"city\">\n            <mat-error *ngIf=\"addressForm.controls['city'].hasError('required')\">\n              City is <strong>required</strong>\n            </mat-error>\n          </mat-form-field>\n        </div>\n        <div class=\"col\">\n          <mat-form-field class=\"full-width\">\n            <mat-select placeholder=\"State\" formControlName=\"state\">\n              <mat-option *ngFor=\"let state of states\" [value]=\"state.abbreviation\">\n                {{ state.name }}\n              </mat-option>\n            </mat-select>\n            <mat-error *ngIf=\"addressForm.controls['state'].hasError('required')\">\n              State is <strong>required</strong>\n            </mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col\">\n          <mat-form-field class=\"full-width\">\n            <input matInput #postalCode maxlength=\"5\" placeholder=\"Postal Code\" type=\"number\" formControlName=\"postalCode\">\n            <mat-hint align=\"end\">{{postalCode.value.length}} / 5</mat-hint>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col\">\n          <mat-radio-group formControlName=\"shipping\">\n            <mat-radio-button value=\"free\">Free Shipping</mat-radio-button>\n            <mat-radio-button value=\"priority\">Priority Shipping</mat-radio-button>\n            <mat-radio-button value=\"nextday\">Next Day Shipping</mat-radio-button>\n          </mat-radio-group>\n        </div>\n      </div>\n    </mat-card-content>\n    <mat-card-actions>\n      <button mat-raised-button color=\"primary\" type=\"submit\">Submit</button>\n    </mat-card-actions>\n  </mat-card>\n</form>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.css']\n})\nexport class NavBarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light default-color\">\n    <!-- Navbar brand -->\n    <a class=\"navbar-brand\" href=\"#\">Product Manage App</a>\n\n    <!-- Collapse button -->\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#basicExampleNav\"\n        aria-controls=\"basicExampleNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n    </button>\n\n    <!-- Collapsible content -->\n    <div class=\"collapse navbar-collapse font-weight-bold\" id=\"basicExampleNav\">\n        <!-- Links -->\n        <ul class=\"navbar-nav ml-auto\">\n            <li class=\"nav-item\" routerLinkActive=\"active\">\n                <a class=\"nav-link\" routerLink=\"/products\">Products</a>\n            </li>\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" href=\"\">Cart</a>\n            </li>\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" href=\"\">Orders</a>\n            </li>\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" routerLink=\"/add-product\" routerLinkActive=\"active\">Add Product</a>\n            </li>\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" routerLink=\"/admin-product\" routerLinkActive=\"active\">Admin Product</a>\n            </li>\n        </ul>\n    </div>\n    <!-- Collapsible content -->\n</nav>\n<!-- <div class=\"container\">\n    <router-outlet></router-outlet>\n</div> -->","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { ProductService } from '../product.service';\nimport { Router } from '@angular/router';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-product-add',\n  templateUrl: './product-add.component.html',\n  styleUrls: ['./product-add.component.css'],\n})\nexport class ProductAddComponent implements OnInit {\n  ngOnInit(): void {}\n  durationInSeconds = 5;\n  productForm = this.fb.group({\n    title: [null, Validators.required],\n    imgUrl: [null, Validators.required],\n    price: [null, Validators.required],\n    desc: [null, Validators.required],\n  });\n  constructor(\n    private fb: FormBuilder,\n    private productService: ProductService,\n    private route: Router,\n    private _snackBar: MatSnackBar\n  ) {}\n\n  onSubmit() {\n    console.log(this.productForm.value);\n    this.productService\n      .addProduct(this.productForm.value)\n      .then((result) => {\n        console.log(result);\n        console.log('result');\n        this._snackBar.open('successFully Added', '', {\n          duration: 3000,\n          verticalPosition: 'top',\n          panelClass: ['blueSnackbar'],\n        });\n      })\n      .catch((err) => {\n        console.log('err');\n        console.log(err);\n        this._snackBar.open('something went to wrong', '', {\n          duration: 3000,\n          verticalPosition: 'top',\n          panelClass: ['blueSnackbar'],\n        });\n      });\n    this.route.navigate(['/products']);\n  }\n}\n","<div class=\"container mt-4\">\n    <form [formGroup]=\"productForm\" (ngSubmit)=\"onSubmit()\">\n        <mat-card class=\"shipping-card\">\n            <mat-card-header class=\"text-center\">\n                <mat-card-title>Add Product</mat-card-title>\n            </mat-card-header>\n            <mat-card-content>\n                <div class=\"row\">\n                    <div class=\"col\">\n                        <mat-form-field appearance=\"outline\">\n                            <mat-label>Title</mat-label>\n                            <input formControlName=\"title\" matInput placeholder=\"Enter Title\">\n                            <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\n                            <mat-error *ngIf=\"productForm.get('title').errors\">\n                                <div *ngIf=\"productForm.get('title').errors.required\">\n                                    <p>Title is <strong>required</strong></p>\n                                </div>\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col\">\n                        <mat-form-field appearance=\"outline\">\n                            <mat-label>Image Url</mat-label>\n                            <input formControlName=\"imgUrl\" matInput placeholder=\"Placeholder\">\n                            <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\n                            <mat-error *ngIf=\"productForm.get('imgUrl').errors\">\n                                <div *ngIf=\"productForm.get('imgUrl').errors.required\">\n                                    <p>Image Url is <strong>required</strong></p>\n                                </div>\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col\">\n                        <mat-form-field appearance=\"outline\">\n                            <mat-label>price</mat-label>\n                            <input formControlName=\"price\" matInput placeholder=\"Placeholder\">\n                            <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\n                            <mat-error *ngIf=\"productForm.get('price').errors\">\n                                <div *ngIf=\"productForm.get('price').errors.required\">\n                                    <p>price is <strong>required</strong></p>\n                                </div>\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col\">\n                        <mat-form-field appearance=\"outline\">\n                            <mat-label>Description</mat-label>\n                            <input formControlName=\"desc\" matInput placeholder=\"Placeholder\">\n                            <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\n                            <mat-error *ngIf=\"productForm.get('desc').errors\">\n                                <div *ngIf=\"productForm.get('desc').errors.required\">\n                                    <p>Description is <strong>required</strong></p>\n                                </div>\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col text-center\">\n                        <button [disabled]=\"productForm.invalid\" class=\"btn btn btn-outline-danger\">Submit</button>\n                    </div>\n                </div>\n            </mat-card-content>\n        </mat-card>\n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ProductService } from '../product.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-product-admin',\n  templateUrl: './product-admin.component.html',\n  styleUrls: ['./product-admin.component.css'],\n})\nexport class ProductAdminComponent implements OnInit {\n  products: any;\n  constructor(\n    private productService: ProductService,\n    private _snackBar: MatSnackBar\n  ) {}\n\n  ngOnInit(): void {\n    this.productService\n      .getProducts()\n      .then((result) => {\n        // console.log(result);\n        this.products = result;\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  deleteProduct(id) {\n    console.log(id);\n    this.products = this.products.filter(({ _id }) => id !== _id);\n    this.productService.deleteProduct(id);\n    this._snackBar.open('Product Deleted SuccessFully', '', {\n      duration: 3000,\n      verticalPosition: 'top',\n      panelClass: ['blueSnackbar'],\n    });\n    // this.productService\n    //   .getProducts()\n    //   .then((result) => {\n    //     // console.log(result);\n    //     this.products = result;\n    //   })\n    //   .catch((err) => {\n    //     console.log(err);\n    //   });\n  }\n}\n","<div class=\"container\">\n    <div class=\"row mt-4\" *ngFor=\"let x of products\">\n        <div class=\"col-md-3\"></div>\n        <div class=\"col-md-6\">\n            <div class=\"card\">\n                <img src=\"{{x.imgUrl}}\" class=\"card-img-top\">\n                <div class=\"card-body\">\n                    <h4 class=\"ont-weight-bold card-title\">{{x.title}}</h4>\n                    <!-- Text -->\n                    <div class=\"d-flex\">\n                        <p class=\"text-center  p-1\">\n                            {{x.price}}\n                        </p>\n                        <p class=\"ext-center p-1\">\n                            {{x.desc}}\n                        </p>\n                    </div>\n                    <!-- Button -->\n                    <a routerLink=\"/edit-product/{{x._id}}\" class=\"details btn btn-outline-danger m-3\">Edit</a>\n                    <a (click)=\"deleteProduct(x._id)\" class=\"btn btn-outline-danger m-3\" id=\"\">Delete</a>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-md-3\"></div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ProductService } from '../product.service';\n\n@Component({\n  selector: 'app-product-details',\n  templateUrl: './product-details.component.html',\n  styleUrls: ['./product-details.component.css'],\n})\nexport class ProductDetailsComponent implements OnInit {\n  product;\n  id;\n  constructor(\n    private route: ActivatedRoute,\n    private productService: ProductService\n  ) {}\n\n  ngOnInit(): void {\n    // const id = this.route.snapshot.params['id'];\n    this.route.params.subscribe((params) => {\n      this.id = params.id;\n    });\n    this.productService\n      .getProduct(this.id)\n      .then((result) => {\n        console.log(result);\n        this.product = result;\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n}\n","<div class=\"container\">\n    <div class=\"row mt-4\">\n        <div class=\"col-md-12\">\n            <div class=\"card\" *ngIf=\"product\">\n                <img src=\"{{product.imgUrl}}\" class=\"card-img-top\">\n                <div class=\"card-body\">\n                    <h4 class=\"ont-weight-bold card-title\">{{product.title}}</h4>\n                    <!-- Text -->\n                    <div class=\"d-flex\">\n                        <p class=\"text-center  p-1\">\n                            {{product.price}}\n                        </p>\n                        <p class=\"ext-center p-1\">\n                            {{product.desc}}\n                        </p>\n                    </div>\n                    <!-- Button -->\n                    <a href=\"\" class=\"details btn btn-outline-danger m-3\">Add To Cart</a>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductService {\n  constructor(private http: HttpClient) {}\n\n  getProducts() {\n    return this.http.get('http://localhost:2000/product').toPromise();\n  }\n\n  getProduct(id) {\n    return this.http.get(`http://localhost:2000/product/${id}`).toPromise();\n  }\n\n  addProduct(product) {\n    console.log(product);\n    return this.http.post('http://localhost:2000/product', product).toPromise();\n  }\n\n  editProduct(product) {\n    console.log(product);\n    return this.http\n      .put(`http://localhost:2000/product/${product.id}`, product)\n      .toPromise();\n  }\n\n  deleteProduct(id) {\n    return this.http.delete(`http://localhost:2000/product/${id}`).toPromise();\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}